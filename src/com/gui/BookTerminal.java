/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gui;

import com.controler.Noficiation;
import com.controler.UserControler;
import com.model.Book;
import com.model.Publisher;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import my.lib.Validate;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author AnataArisa
 */
public class BookTerminal extends javax.swing.JFrame {

    private UserControler user;
    private Menu menu;
    private TableControler tc;
    private Noficiation nc;

    /**
     * Creates new form BookTerminal
     */
    public BookTerminal() {
        initComponents();
    }

    public BookTerminal(UserControler user, Menu menu) {
        this.user = user;
        this.menu = menu;
        initComponents();
        tc = new TableControler();
        tc.start();
        setVisibleObject(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        BID = new JPanel();
        bid = new JTextField();
        bidlabel = new JLabel();
        bnamelable = new JLabel();
        bname = new JTextField();
        bpricelabel = new JLabel();
        bprice = new JTextField();
        bquanlabel = new JLabel();
        bquan = new JTextField();
        bstatlabel = new JLabel();
        jScrollPane1 = new JScrollPane();
        bookTable = new JTable();
        bplabel = new JLabel();
        bpID = new JTextField();
        bstatus = new JComboBox<>();
        message = new JLabel();
        clear_btn = new JButton();
        delete_btn = new JButton();
        searchPID1 = new JButton();
        update_btn = new JButton();
        create = new JButton();
        searchBID = new JButton();
        searchBName = new JButton();
        namemess = new JLabel();
        pricemess = new JLabel();
        quantitymess = new JLabel();
        bidmess = new JLabel();
        pidmess = new JLabel();
        jPanel2 = new JPanel();
        exitoption = new JPanel();
        jLabel8 = new JLabel();
        jLabel9 = new JLabel();
        sbidoption1 = new JPanel();
        jLabel10 = new JLabel();
        jLabel11 = new JLabel();
        sbinameoption = new JPanel();
        jLabel12 = new JLabel();
        jLabel13 = new JLabel();
        spidoption = new JPanel();
        jLabel14 = new JLabel();
        jLabel15 = new JLabel();
        createoption = new JPanel();
        jLabel16 = new JLabel();
        jLabel17 = new JLabel();
        updateoption = new JPanel();
        jLabel18 = new JLabel();
        jLabel19 = new JLabel();
        deleteoption = new JPanel();
        jLabel20 = new JLabel();
        jLabel21 = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book Terminal");
        setIconImage(new ImageIcon("src//com//gui//img//book.png").getImage());
        setLocationByPlatform(true);
        setResizable(false);
        getContentPane().setLayout(new AbsoluteLayout());

        jPanel1.setBackground(new Color(51, 51, 255));
        jPanel1.setLayout(new AbsoluteLayout());

        jLabel1.setFont(new Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setText("BOOK MANAGER");
        jPanel1.add(jLabel1, new AbsoluteConstraints(1960, 70, -1, 40));

        getContentPane().add(jPanel1, new AbsoluteConstraints(-6, 0, 2330, 180));

        BID.setLayout(new AbsoluteLayout());

        bid.setFont(new Font("Dialog", 0, 24)); // NOI18N
        bid.addFocusListener(new FocusAdapter() {
            public void focusLost(FocusEvent evt) {
                bidFocusLost(evt);
            }
        });
        BID.add(bid, new AbsoluteConstraints(730, 60, 469, 66));

        bidlabel.setFont(new Font("Dialog", 1, 24)); // NOI18N
        bidlabel.setText("BOOK ID");
        BID.add(bidlabel, new AbsoluteConstraints(730, 20, -1, -1));

        bnamelable.setFont(new Font("Dialog", 1, 24)); // NOI18N
        bnamelable.setText("BOOK NAME");
        BID.add(bnamelable, new AbsoluteConstraints(730, 130, -1, -1));

        bname.setFont(new Font("Dialog", 0, 24)); // NOI18N
        bname.addFocusListener(new FocusAdapter() {
            public void focusLost(FocusEvent evt) {
                bnameFocusLost(evt);
            }
        });
        BID.add(bname, new AbsoluteConstraints(730, 170, 469, 66));

        bpricelabel.setFont(new Font("Dialog", 1, 24)); // NOI18N
        bpricelabel.setText("BOOK PRICE");
        BID.add(bpricelabel, new AbsoluteConstraints(730, 240, -1, -1));

        bprice.setFont(new Font("Dialog", 0, 24)); // NOI18N
        bprice.addFocusListener(new FocusAdapter() {
            public void focusLost(FocusEvent evt) {
                bpriceFocusLost(evt);
            }
        });
        BID.add(bprice, new AbsoluteConstraints(730, 280, 469, 66));

        bquanlabel.setFont(new Font("Dialog", 1, 24)); // NOI18N
        bquanlabel.setText("BOOK QUANTITY");
        BID.add(bquanlabel, new AbsoluteConstraints(730, 360, -1, -1));

        bquan.setFont(new Font("Dialog", 0, 24)); // NOI18N
        bquan.addFocusListener(new FocusAdapter() {
            public void focusLost(FocusEvent evt) {
                bquanFocusLost(evt);
            }
        });
        BID.add(bquan, new AbsoluteConstraints(730, 410, 469, 66));

        bstatlabel.setFont(new Font("Dialog", 1, 24)); // NOI18N
        bstatlabel.setText("BOOK STATUS");
        BID.add(bstatlabel, new AbsoluteConstraints(730, 490, -1, -1));

        bookTable.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        bookTable.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BID", "NAME", "QUANTITY", "PRICE", "SUBTOTAL", "PUBLISHER NAME", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookTable.setCellSelectionEnabled(true);
        bookTable.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(bookTable);

        BID.add(jScrollPane1, new AbsoluteConstraints(750, 850, 1540, 250));

        bplabel.setFont(new Font("Dialog", 1, 24)); // NOI18N
        bplabel.setText("BOOK PUBLISHER");
        BID.add(bplabel, new AbsoluteConstraints(730, 620, -1, -1));

        bpID.setFont(new Font("Dialog", 0, 24)); // NOI18N
        bpID.addFocusListener(new FocusAdapter() {
            public void focusLost(FocusEvent evt) {
                bpIDFocusLost(evt);
            }
        });
        BID.add(bpID, new AbsoluteConstraints(730, 670, 469, 66));

        bstatus.setFont(new Font("Dialog", 1, 24)); // NOI18N
        bstatus.setModel(new DefaultComboBoxModel<>(new String[] { "Available", "Not Available " }));
        BID.add(bstatus, new AbsoluteConstraints(730, 530, 460, 81));

        message.setFont(new Font("Segoe UI", 1, 36)); // NOI18N
        message.setForeground(new Color(204, 0, 0));
        message.setHorizontalAlignment(SwingConstants.LEFT);
        BID.add(message, new AbsoluteConstraints(730, 770, 620, 60));

        clear_btn.setFont(new Font("Dialog", 1, 18)); // NOI18N
        clear_btn.setText("CLEAR");
        clear_btn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                clear_btnActionPerformed(evt);
            }
        });
        BID.add(clear_btn, new AbsoluteConstraints(1990, 790, -1, -1));

        delete_btn.setFont(new Font("Dialog", 1, 18)); // NOI18N
        delete_btn.setText("DELETE");
        delete_btn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });
        BID.add(delete_btn, new AbsoluteConstraints(2100, 770, 180, 60));

        searchPID1.setFont(new Font("Dialog", 1, 18)); // NOI18N
        searchPID1.setText("SEARCH BY PID");
        searchPID1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                searchPID1ActionPerformed(evt);
            }
        });
        BID.add(searchPID1, new AbsoluteConstraints(2100, 770, -1, 60));

        update_btn.setFont(new Font("Dialog", 1, 18)); // NOI18N
        update_btn.setText("UPDATE");
        update_btn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });
        BID.add(update_btn, new AbsoluteConstraints(2100, 780, 180, 50));

        create.setFont(new Font("Dialog", 1, 18)); // NOI18N
        create.setText("CREATE");
        create.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                createActionPerformed(evt);
            }
        });
        BID.add(create, new AbsoluteConstraints(2100, 760, 180, 70));

        searchBID.setFont(new Font("Dialog", 1, 18)); // NOI18N
        searchBID.setText("SEARCH BID");
        searchBID.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                searchBIDActionPerformed(evt);
            }
        });
        BID.add(searchBID, new AbsoluteConstraints(1800, 760, 170, 60));

        searchBName.setFont(new Font("Dialog", 1, 18)); // NOI18N
        searchBName.setText("SEARCH BNAME");
        searchBName.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                searchBNameActionPerformed(evt);
            }
        });
        BID.add(searchBName, new AbsoluteConstraints(2100, 770, -1, 60));

        namemess.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        namemess.setForeground(new Color(204, 0, 0));
        namemess.setHorizontalAlignment(SwingConstants.LEFT);
        namemess.setVerticalAlignment(SwingConstants.TOP);
        BID.add(namemess, new AbsoluteConstraints(1210, 170, 1110, 60));

        pricemess.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        pricemess.setForeground(new Color(204, 0, 0));
        pricemess.setHorizontalAlignment(SwingConstants.LEFT);
        pricemess.setVerticalAlignment(SwingConstants.TOP);
        BID.add(pricemess, new AbsoluteConstraints(1210, 280, 1110, 60));

        quantitymess.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        quantitymess.setForeground(new Color(204, 0, 0));
        quantitymess.setHorizontalAlignment(SwingConstants.LEFT);
        quantitymess.setVerticalAlignment(SwingConstants.TOP);
        BID.add(quantitymess, new AbsoluteConstraints(1210, 410, 1110, 60));

        bidmess.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        bidmess.setForeground(new Color(204, 0, 0));
        bidmess.setHorizontalAlignment(SwingConstants.LEFT);
        bidmess.setVerticalAlignment(SwingConstants.TOP);
        BID.add(bidmess, new AbsoluteConstraints(1210, 60, 1110, 60));

        pidmess.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        pidmess.setForeground(new Color(204, 0, 0));
        pidmess.setHorizontalAlignment(SwingConstants.LEFT);
        pidmess.setVerticalAlignment(SwingConstants.TOP);
        BID.add(pidmess, new AbsoluteConstraints(1210, 670, 1110, 60));

        jPanel2.setBackground(new Color(51, 102, 255));
        jPanel2.setLayout(new AbsoluteLayout());

        exitoption.setBackground(new Color(51, 153, 255));
        exitoption.setBorder(BorderFactory.createTitledBorder(""));
        exitoption.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                exitoptionMouseClicked(evt);
            }
        });
        exitoption.setLayout(new AbsoluteLayout());

        jLabel8.setIcon(new ImageIcon(getClass().getResource("/com/gui/img/exit.png"))); // NOI18N
        exitoption.add(jLabel8, new AbsoluteConstraints(40, 0, 80, 120));

        jLabel9.setFont(new Font("Segoe UI", 1, 48)); // NOI18N
        jLabel9.setForeground(new Color(255, 255, 255));
        jLabel9.setText("EXIT");
        exitoption.add(jLabel9, new AbsoluteConstraints(140, 30, 460, -1));

        jPanel2.add(exitoption, new AbsoluteConstraints(0, 1170, 710, 120));

        sbidoption1.setBackground(new Color(51, 153, 255));
        sbidoption1.setBorder(BorderFactory.createTitledBorder(""));
        sbidoption1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                sbidoption1MouseClicked(evt);
            }
        });
        sbidoption1.setLayout(new AbsoluteLayout());

        jLabel10.setIcon(new ImageIcon(getClass().getResource("/com/gui/img/search.png"))); // NOI18N
        sbidoption1.add(jLabel10, new AbsoluteConstraints(40, 0, 80, 120));

        jLabel11.setFont(new Font("Segoe UI", 1, 48)); // NOI18N
        jLabel11.setForeground(new Color(255, 255, 255));
        jLabel11.setText("SEARCH BY BID");
        sbidoption1.add(jLabel11, new AbsoluteConstraints(140, 30, 410, -1));

        jPanel2.add(sbidoption1, new AbsoluteConstraints(0, 270, 710, 120));

        sbinameoption.setBackground(new Color(51, 153, 255));
        sbinameoption.setBorder(BorderFactory.createTitledBorder(""));
        sbinameoption.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                sbinameoptionMouseClicked(evt);
            }
        });
        sbinameoption.setLayout(new AbsoluteLayout());

        jLabel12.setIcon(new ImageIcon(getClass().getResource("/com/gui/img/search.png"))); // NOI18N
        sbinameoption.add(jLabel12, new AbsoluteConstraints(40, 0, 80, 120));

        jLabel13.setFont(new Font("Segoe UI", 1, 48)); // NOI18N
        jLabel13.setForeground(new Color(255, 255, 255));
        jLabel13.setText("SEARCH BY BNAME");
        sbinameoption.add(jLabel13, new AbsoluteConstraints(140, 30, 460, -1));

        jPanel2.add(sbinameoption, new AbsoluteConstraints(0, 390, 710, 120));

        spidoption.setBackground(new Color(51, 153, 255));
        spidoption.setBorder(BorderFactory.createTitledBorder(""));
        spidoption.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                spidoptionMouseClicked(evt);
            }
        });
        spidoption.setLayout(new AbsoluteLayout());

        jLabel14.setIcon(new ImageIcon(getClass().getResource("/com/gui/img/search.png"))); // NOI18N
        spidoption.add(jLabel14, new AbsoluteConstraints(40, 0, 80, 120));

        jLabel15.setFont(new Font("Segoe UI", 1, 48)); // NOI18N
        jLabel15.setForeground(new Color(255, 255, 255));
        jLabel15.setText("SEARCH BY PID");
        spidoption.add(jLabel15, new AbsoluteConstraints(140, 30, 460, -1));

        jPanel2.add(spidoption, new AbsoluteConstraints(0, 510, 710, 120));

        createoption.setBackground(new Color(51, 153, 255));
        createoption.setBorder(BorderFactory.createTitledBorder(""));
        createoption.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                createoptionMouseClicked(evt);
            }
        });
        createoption.setLayout(new AbsoluteLayout());

        jLabel16.setIcon(new ImageIcon(getClass().getResource("/com/gui/img/page.png"))); // NOI18N
        createoption.add(jLabel16, new AbsoluteConstraints(40, 0, 80, 120));

        jLabel17.setFont(new Font("Segoe UI", 1, 48)); // NOI18N
        jLabel17.setForeground(new Color(255, 255, 255));
        jLabel17.setText("CREATE");
        createoption.add(jLabel17, new AbsoluteConstraints(140, 30, 460, -1));

        jPanel2.add(createoption, new AbsoluteConstraints(0, 630, 710, 120));

        updateoption.setBackground(new Color(51, 153, 255));
        updateoption.setBorder(BorderFactory.createTitledBorder(""));
        updateoption.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                updateoptionMouseClicked(evt);
            }
        });
        updateoption.setLayout(new AbsoluteLayout());

        jLabel18.setIcon(new ImageIcon(getClass().getResource("/com/gui/img/updating.png"))); // NOI18N
        updateoption.add(jLabel18, new AbsoluteConstraints(40, 0, 80, 120));

        jLabel19.setFont(new Font("Segoe UI", 1, 48)); // NOI18N
        jLabel19.setForeground(new Color(255, 255, 255));
        jLabel19.setText("UPDATE");
        updateoption.add(jLabel19, new AbsoluteConstraints(140, 30, 460, -1));

        jPanel2.add(updateoption, new AbsoluteConstraints(0, 750, 710, 120));

        deleteoption.setBackground(new Color(51, 153, 255));
        deleteoption.setBorder(BorderFactory.createTitledBorder(""));
        deleteoption.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                deleteoptionMouseClicked(evt);
            }
        });
        deleteoption.setLayout(new AbsoluteLayout());

        jLabel20.setIcon(new ImageIcon(getClass().getResource("/com/gui/img/delete.png"))); // NOI18N
        deleteoption.add(jLabel20, new AbsoluteConstraints(40, 0, 80, 120));

        jLabel21.setFont(new Font("Segoe UI", 1, 48)); // NOI18N
        jLabel21.setForeground(new Color(255, 255, 255));
        jLabel21.setText("DELETE");
        deleteoption.add(jLabel21, new AbsoluteConstraints(140, 30, 460, -1));

        jPanel2.add(deleteoption, new AbsoluteConstraints(0, 870, 710, 120));

        BID.add(jPanel2, new AbsoluteConstraints(0, -170, 710, 1290));

        getContentPane().add(BID, new AbsoluteConstraints(0, 175, 2312, 1130));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBNameActionPerformed(ActionEvent evt) {//GEN-FIRST:event_searchBNameActionPerformed
        tc.stopUpdate();
        tc.resetTable(0);
        String name = bname.getText();
        if (name.isEmpty()) {
            return;
        }
        List<Book> list = user.searchBookByName(name);
        DefaultTableModel tm = (DefaultTableModel) bookTable.getModel();
        if (list != null) {
            for (Book t : list) {
                String[] rowData = {t.getbID(), t.getName(), Integer.toString(t.getPrice()), Integer.toString(t.getQuantity()), Integer.toString(t.getPrice() * t.getQuantity()), t.isStatus(), t.getpID()};
                tm.addRow(rowData);
            }
            noficiation("Founded: " + list.size() + " entity(s)");
        }else{
            noficiation("Not found !!!");
        }
    }//GEN-LAST:event_searchBNameActionPerformed

    private void searchPID1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_searchPID1ActionPerformed
       tc.resetTable(0);
        String id = bpID.getText();
        if (id.isEmpty()) {
            noficiation("PID is empty!!!");
            return;
        }
        Book temp = new Book();
        temp.setpID(id);
        temp.setName("");
        List<Book> list = user.searchBookByPID(temp);
        DefaultTableModel tm = (DefaultTableModel) bookTable.getModel();
        if (list != null) {
            for (Book t : list) {
                String[] rowData = {t.getbID(), t.getName(), Integer.toString(t.getPrice()), Integer.toString(t.getQuantity()), Integer.toString(t.getPrice() * t.getQuantity()), t.isStatus(), t.getpID()};
                tm.addRow(rowData);
            }
            noficiation("Founded: " + list.size() + " entity(s)");
        }else noficiation("Not found !!!");
    }//GEN-LAST:event_searchPID1ActionPerformed

    private void createActionPerformed(ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        String bID = bid.getText();
        String Name = bname.getText();
        int Price = Integer.parseInt(bprice.getText());
        int Quantity = Integer.parseInt(bquan.getText());
        String pID = bpID.getText();
        String status = bstatus.getSelectedItem().toString();
        Book temp = new Book(bID, Name, Price, Quantity, pID, status);
        if (user.addBook(temp) == false) {
            noficiation("Failed !!!");
        } else {
            noficiation("Success !!!");
        }
    }//GEN-LAST:event_createActionPerformed

    private void clear_btnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_clear_btnActionPerformed
        //Clear
        clearText();
    }//GEN-LAST:event_clear_btnActionPerformed

    private void update_btnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        bid.setEditable(true);
        String bID = bid.getText();
        String Name = bname.getText();
        int Price = Integer.parseInt(bprice.getText());
        int Quantity = Integer.parseInt(bquan.getText());
        String pID = bpID.getText();
        String status = bstatus.getSelectedItem().toString();
        Book temp = new Book(bID, Name, Price, Quantity, pID, status);

        if (user.updateBook(temp)) {
            noficiation("Update success !!!");
            tc.resetTable(1);
        } else {
            noficiation("Update failed !!!");
        }
        
    }//GEN-LAST:event_update_btnActionPerformed

    private void searchBIDActionPerformed(ActionEvent evt) {//GEN-FIRST:event_searchBIDActionPerformed
        String searchID = bid.getText().toUpperCase();
        Book temp = user.searchBookByBID(searchID);
        if (temp == null) {
            message.setText("Not found BID: " + searchID);
            return ;
        }
        bid.setText(temp.getbID());
        bname.setText(temp.getName());
        bprice.setText(Integer.toString(temp.getPrice()));
        bquan.setText(Integer.toString(temp.getQuantity()));
        bpID.setText(temp.getpID());
        bstatus.setSelectedIndex((temp.isStatus().trim().equals("Available")) ? 0 : 1);
    }//GEN-LAST:event_searchBIDActionPerformed

    private void delete_btnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        // TODO add your handling code here:
        String bID = bid.getText().toUpperCase();
        if (user.delete(bID)) {
            message.setText("Delete success!!!");
            tc.resetTable(1);
        } else {
            message.setText("Delete fail");
        }
    }//GEN-LAST:event_delete_btnActionPerformed

    private void bidFocusLost(FocusEvent evt) {//GEN-FIRST:event_bidFocusLost
        // TODO add your handling code here:
        if(bid.getText().isEmpty()) noficiation("Your BID is empty, please check again !!!", bidmess);
        else{
            if(!Validate.regexValidate("B[\\d]{5}", bid.getText())){
                noficiation("Your BID  entered is not right format !!!",bidmess);
            }
        }
    }//GEN-LAST:event_bidFocusLost

    private void bnameFocusLost(FocusEvent evt) {//GEN-FIRST:event_bnameFocusLost
        if(bname.getText().isEmpty()) noficiation("Your BName is empty, please check again !!!",namemess);
        else{
            if(!Validate.stringValidationSize(bname.getText(), 5, 30)){
                noficiation("Your name is too long or too shot, please check again !!!\nTips: your name should length about 5-30 chars !!!", namemess);
                //noficiation("Tips: your name should length about 5-30 chars !!!");
            }
        }
    }//GEN-LAST:event_bnameFocusLost

    private void bpriceFocusLost(FocusEvent evt) {//GEN-FIRST:event_bpriceFocusLost
        if(bprice.getText().isEmpty()) noficiation("Your Price shoud not be empty, please check again !!!",pricemess);
        else{
            if(!Validate.intValidate(bprice.getText(),1, Integer.MAX_VALUE)){
                noficiation("Your price isn't valid, please check again !!!\nTips: your price is a number and > 1", pricemess);
            }
        }
    }//GEN-LAST:event_bpriceFocusLost

    private void bquanFocusLost(FocusEvent evt) {//GEN-FIRST:event_bquanFocusLost
        // TODO add your handling code here:
        if(bquan.getText().isEmpty()) noficiation("Your quantity should not be empty, please check again !!!", quantitymess);
        else{
            if(!Validate.intValidate(bquan.getText(),0, Integer.MAX_VALUE)){
                noficiation("Your quantity isn't valid, please check again !!!\nTips: your quantity is a number and > 0", quantitymess);
            }
        }
    }//GEN-LAST:event_bquanFocusLost

    private void bpIDFocusLost(FocusEvent evt) {//GEN-FIRST:event_bpIDFocusLost
        // TODO add your handling code here:
        if(bpID.getText().isEmpty()) noficiation("PID is empty, please checked again", pidmess);
        else{
            if(!Validate.regexValidate("P[\\d]{5}", bpID.getText())){
                noficiation("Your PID is not right format, please check again\nTips: The format of PID is  Pxxxxx", pidmess);
            }
        }
    }//GEN-LAST:event_bpIDFocusLost

    private void sbidoption1MouseClicked(MouseEvent evt) {//GEN-FIRST:event_sbidoption1MouseClicked
        tc.resetTable(1);
        setVisibleObject(true);
        clearText();
        sbidoption1.setBackground(Color.decode("#00ddff"));
        sbinameoption.setBackground(Color.decode("#3399ff"));
        spidoption.setBackground(Color.decode("#3399ff"));
        createoption.setBackground(Color.decode("#3399ff"));
        updateoption.setBackground(Color.decode("#3399ff"));
        deleteoption.setBackground(Color.decode("#3399ff"));
        searchBID.show(true);
        searchBName.show(false);
        searchPID1.show(false);
        update_btn.show(false);
        delete_btn.show(false);
        clear_btn.show(true);
        create.show(false);
        bid.setEditable(true);
        bname.setEditable(false);
        bquan.setEditable(false);
        bprice.setEditable(false);
        bpID.setEditable(false);
        bstatus.setEditable(false);
        bid.setFocusable(true);
        bname.setFocusable(false);
        bquan.setFocusable(false);
        bprice.setFocusable(false);
        bpID.setFocusable(false);
    }//GEN-LAST:event_sbidoption1MouseClicked

    private void sbinameoptionMouseClicked(MouseEvent evt) {//GEN-FIRST:event_sbinameoptionMouseClicked
        // TODO add your handling code here:
        clearText();
        sbidoption1.setBackground(Color.decode("#3399ff"));
        sbinameoption.setBackground(Color.decode("#00ddff"));
        spidoption.setBackground(Color.decode("#3399ff"));
        createoption.setBackground(Color.decode("#3399ff"));
        updateoption.setBackground(Color.decode("#3399ff"));
        deleteoption.setBackground(Color.decode("#3399ff"));
        tc.stopUpdate();
        tc.resetTable(0);
        setVisibleObject(true);
        searchBID.show(false);
        searchBName.show(true);
        searchPID1.show(false);
        update_btn.show(false);
        delete_btn.show(false);
        clear_btn.show(true);
        create.show(false);
        bid.setEditable(false);
        bname.setEditable(true);
        bquan.setEditable(false);
        bprice.setEditable(false);
        bpID.setEditable(false);
        bstatus.setEditable(false);
         bid.setFocusable(false);
        bname.setFocusable(true);
        bquan.setFocusable(false);
        bprice.setFocusable(false);
        bpID.setFocusable(false);
    }//GEN-LAST:event_sbinameoptionMouseClicked

    private void spidoptionMouseClicked(MouseEvent evt) {//GEN-FIRST:event_spidoptionMouseClicked
        // TODO add your handling code here:
        clearText();
        sbidoption1.setBackground(Color.decode("#3399ff"));
        sbinameoption.setBackground(Color.decode("#3399ff"));
        spidoption.setBackground(Color.decode("#00ddff"));
        createoption.setBackground(Color.decode("#3399ff"));
        updateoption.setBackground(Color.decode("#3399ff"));
        deleteoption.setBackground(Color.decode("#3399ff"));
        tc.stopUpdate();
        tc.resetTable(0);
        setVisibleObject(true);
        searchBID.show(false);
        searchBName.show(false);
        searchPID1.show(true);
        update_btn.show(false);
        delete_btn.show(false);
        clear_btn.show(true);
        create.show(false);
        bid.setEditable(false);
        bname.setEditable(false);
        bquan.setEditable(false);
        bprice.setEditable(false);
        bpID.setEditable(true);
        bstatus.setEditable(false);
         bid.setFocusable(false);
        bname.setFocusable(false);
        bquan.setFocusable(false);
        bprice.setFocusable(false);
        bpID.setFocusable(true);
    }//GEN-LAST:event_spidoptionMouseClicked

    private void createoptionMouseClicked(MouseEvent evt) {//GEN-FIRST:event_createoptionMouseClicked
        // TODO add your handling code here:
        clearText();
        sbidoption1.setBackground(Color.decode("#3399ff"));
        sbinameoption.setBackground(Color.decode("#3399ff"));
        spidoption.setBackground(Color.decode("#3399ff"));
        createoption.setBackground(Color.decode("#00ddff"));
        updateoption.setBackground(Color.decode("#3399ff"));
        deleteoption.setBackground(Color.decode("#3399ff"));
        tc.resetTable(1);
        setVisibleObject(true);
        searchBID.show(false);
        searchBName.show(false);
        searchPID1.show(false);
        update_btn.show(false);
        delete_btn.show(false);
        clear_btn.show(true);
        create.show(true);
        bid.setEditable(true);
        bname.setEditable(true);
        bquan.setEditable(true);
        bprice.setEditable(true);
        bpID.setEditable(true);
        bstatus.setEditable(true);
        bid.setFocusable(true);
        bname.setFocusable(true);
        bquan.setFocusable(true);
        bprice.setFocusable(true);
        bpID.setFocusable(true);
    }//GEN-LAST:event_createoptionMouseClicked

    private void updateoptionMouseClicked(MouseEvent evt) {//GEN-FIRST:event_updateoptionMouseClicked
        // TODO add your handling code here:
        clearText();
        sbidoption1.setBackground(Color.decode("#3399ff"));
        sbinameoption.setBackground(Color.decode("#3399ff"));
        spidoption.setBackground(Color.decode("#3399ff"));
        createoption.setBackground(Color.decode("#3399ff"));
        updateoption.setBackground(Color.decode("#00ddff"));
        deleteoption.setBackground(Color.decode("#3399ff"));
        tc.resetTable(1);
        setVisibleObject(true);
         searchBID.show(true);
        searchBName.show(false);
        searchPID1.show(false);
        update_btn.show(true);
        delete_btn.show(false);
        clear_btn.show(true);
        create.show(false);
        bid.setEditable(true);
        bname.setEditable(true);
        bquan.setEditable(true);
        bprice.setEditable(true);
        bpID.setEditable(true);
        bstatus.setEditable(true);
        bid.setFocusable(true);
        bname.setFocusable(true);
        bquan.setFocusable(true);
        bprice.setFocusable(true);
        bpID.setFocusable(true);
    }//GEN-LAST:event_updateoptionMouseClicked

    private void deleteoptionMouseClicked(MouseEvent evt) {//GEN-FIRST:event_deleteoptionMouseClicked
        // TODO add your handling code here:
        clearText();
        sbidoption1.setBackground(Color.decode("#3399ff"));
        sbinameoption.setBackground(Color.decode("#3399ff"));
        spidoption.setBackground(Color.decode("#3399ff"));
        createoption.setBackground(Color.decode("#3399ff"));
        updateoption.setBackground(Color.decode("#3399ff"));
        deleteoption.setBackground(Color.decode("#00ddff"));
        tc.resetTable(1);
        searchBID.show(false);
        searchBName.show(false);
        searchPID1.show(false);
        update_btn.show(false);
        delete_btn.show(true);
        clear_btn.show(false);
        create.show(false);
        bid.setEditable(true);
        bname.setEditable(false);
        bquan.setEditable(false);
        bprice.setEditable(false);
        bpID.setEditable(false);
        bstatus.setEditable(false);
        bid.setFocusable(true);
        bname.setFocusable(false);
        bquan.setFocusable(false);
        bprice.setFocusable(false);
        bpID.setFocusable(false);
    }//GEN-LAST:event_deleteoptionMouseClicked

    private void exitoptionMouseClicked(MouseEvent evt) {//GEN-FIRST:event_exitoptionMouseClicked
        // TODO add your handling code here:
        this.menu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_exitoptionMouseClicked

    
    private void noficiation(String mess){
        nc = new Noficiation(message);
        nc.setContent(mess);
        nc.start();
    }
    private void noficiation(String mess, JLabel temp){
        nc = new Noficiation(temp);
        nc.setContent(mess);
        nc.start();
    }
    private void clearText(){
        bid.setText("");
        bname.setText("");
        bprice.setText("");
        bquan.setText("");
        bpID.setText("");
    }
    private void setVisibleObject(boolean status){
        searchBID.show(status);
        searchBName.show(status);
        searchPID1.show(status);
        update_btn.show(status);
        delete_btn.show(status);
        clear_btn.show(status);
        create.show(status);
        bid.show(status);
        bname.show(status);
        bquan.show(status);
        bprice.show(status);
        bpID.show(status);
        bstatus.show(status);
        bidlabel.show(status);
        bnamelable.show(status);
        bquanlabel.show(status);
        bpricelabel.show(status);
        bstatlabel.show(status);
        bplabel.show(status);
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel BID;
    private JTextField bid;
    private JLabel bidlabel;
    private JLabel bidmess;
    private JTextField bname;
    private JLabel bnamelable;
    private JTable bookTable;
    private JTextField bpID;
    private JLabel bplabel;
    private JTextField bprice;
    private JLabel bpricelabel;
    private JTextField bquan;
    private JLabel bquanlabel;
    private JLabel bstatlabel;
    private JComboBox<String> bstatus;
    private JButton clear_btn;
    private JButton create;
    private JPanel createoption;
    private JButton delete_btn;
    private JPanel deleteoption;
    private JPanel exitoption;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel16;
    private JLabel jLabel17;
    private JLabel jLabel18;
    private JLabel jLabel19;
    private JLabel jLabel20;
    private JLabel jLabel21;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JScrollPane jScrollPane1;
    private JLabel message;
    private JLabel namemess;
    private JLabel pidmess;
    private JLabel pricemess;
    private JLabel quantitymess;
    private JPanel sbidoption1;
    private JPanel sbinameoption;
    private JButton searchBID;
    private JButton searchBName;
    private JButton searchPID1;
    private JPanel spidoption;
    private JButton update_btn;
    private JPanel updateoption;
    // End of variables declaration//GEN-END:variables
    private class TableControler extends Thread {

        private List<Book> bookTemp;
        private List<Publisher> pubTemp;
        private int size = 0;
        private boolean checker = true;
        private Thread thread = null;
        
        private TableControler(){
            thread = this;
        }
        @Override
        public void run() {
            while (checker) {
                bookTemp = user.getBookList();
                if (bookTemp != null) {
                    if (size < bookTemp.size()) {
                        for (int i = size; i < bookTemp.size(); i++) {
                            String pName = null;
                            Book c = bookTemp.get(i);
                            pubTemp = user.getPubList();
                            for (Publisher a : pubTemp) {
                                if (a.getpID().equalsIgnoreCase(bookTemp.get(i).getpID())) {
                                    pName = a.getName();
                                    break;
                                }
                            }
                            if(pName == null) pName = "Unknown";
                            String[] rowData = {c.getbID(), c.getName(), Integer.toString(c.getQuantity()), Integer.toString(c.getPrice()), Integer.toString(c.getPrice() * c.getQuantity()), pName, c.isStatus()};
                            DefaultTableModel tm = (DefaultTableModel) bookTable.getModel();
                            tm.addRow(rowData);
                        }
                        size = bookTemp.size();
                    }
                }
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(BookTerminal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        @Override
        public void start() {
            thread = new Thread(this);
            thread.start();
        }
        
        public void stopUpdate(){
            checker = false;
        }
        
        public void resetTable(int mode){
            DefaultTableModel tm = (DefaultTableModel)bookTable.getModel();
            tm.setRowCount(0);
            size = 0;
            if(mode == 1 && !this.isAlive()){
                checker = true;
                this.start();
            }
        }
    }
}
